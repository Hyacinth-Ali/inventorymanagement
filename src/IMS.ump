namespace dedon.motors.ims.model;

use IMSPersistence.ump;

class IMS
{
	1 <@>- * Product products;
	//1 <@>- * Warehouse warehouse;
	1 <@>- * Customer customers;
	1 <@>- * Transaction transactions;
	
	public java.util.Date getCurrentDate() {
    java.util.Calendar cal = java.util.Calendar.getInstance();
    //cal.set(Calendar.HOUR_OF_DAY, 0);
    //cal.set(Calendar.MINUTE, 0);
    //cal.set(Calendar.SECOND, 0);
    //cal.set(Calendar.MILLISECOND, 0);
    java.util.Date date = cal.getTime();
    return date;
  }
}

class Product
{
  unique name;
  lazy Integer unitprice;
  lazy Integer quantity;
  
  before constructor, setName {
  	if(aName == null || aName.length() == 0 ) {
  		throw new RuntimeException("The name of a product cannot be empty");
  	}
  	if (aName.length() > 30) {
  		throw new RuntimeException("Product character cannot be more than 30");
  	}
  }
  
} 

//class Warehouse
//{
	//0..1 -- * Product products;
//}

//class Manager
//{
	//unique String username;
	//String password;
//}

class Customer {
	autounique id;
	firstName;
	surName;
	
	before constructor, setFirstName {
  	if(aFirstName == null || aFirstName.length() == 0 ) {
  		throw new RuntimeException("The first name of a customer cannot be empty");
  	}
  	if (aFirstName.length() > 20) {
  		throw new RuntimeException("Customer first name character cannot be more than 20");
  	}
  }
  
  before constructor, setSurName {
  	if(aSurName == null || aSurName.length() == 0 ) {
  		throw new RuntimeException("The sur name of a customer cannot be empty");
  	}
  	if (aSurName.length() > 20) {
  		throw new RuntimeException("Customer sur name character cannot be more than 20");
  	}
  }
}

class Transaction {
	//Date date;
	autounique id;
	lazy Integer totalAmount;
	lazy Integer amountPaid;
	Integer debt = totalAmount - amountPaid; 
	* transactions -- 1 Customer customer;
    0..1 transactions -- * Product products;
}

//class User {
  
  //1 user -- 0..1 Manager manager;
  //1 user -- 0..1 Customer customer;
//}

